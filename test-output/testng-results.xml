<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="10" total="12" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="17867" started-at="2020-05-17T17:13:37Z" finished-at="2020-05-17T17:13:54Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="17867" started-at="2020-05-17T17:13:37Z" finished-at="2020-05-17T17:13:54Z">
      <class name="FuntionalTestCases.Sprint_1">
        <test-method status="PASS" signature="startReport()[pri:0, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="startReport" is-config="true" duration-ms="181" started-at="2020-05-17T22:43:36Z" finished-at="2020-05-17T22:43:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="LaunchBrowser(java.lang.String, java.lang.String)[pri:0, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="LaunchBrowser" is-config="true" duration-ms="13690" started-at="2020-05-17T22:43:37Z" finished-at="2020-05-17T22:43:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchBrowser -->
        <test-method status="FAIL" signature="TC01()[pri:1, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="TC01" duration-ms="3948" started-at="2020-05-17T22:43:50Z" description="Login" finished-at="2020-05-17T22:43:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertFalse(Assert.java:62)
	at org.testng.Assert.assertFalse(Assert.java:72)
	at FuntionalTestCases.Sprint_1.TC01(Sprint_1.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.TestNG.privateMain(TestNG.java:1459)
	at org.testng.TestNG.main(TestNG.java:1428)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01 -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="CloseBrowser" is-config="true" duration-ms="118" started-at="2020-05-17T22:43:54Z" finished-at="2020-05-17T22:43:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="FAIL" signature="getResult(org.testng.ITestResult)[pri:0, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="getResult" is-config="true" duration-ms="98" started-at="2020-05-17T22:43:54Z" finished-at="2020-05-17T22:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC01 status=FAILURE method=Sprint_1.TC01()[pri:1, instance:FuntionalTestCases.Sprint_1@66048bfd] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:344)
	at Utility.CommonActions.GetScreenshot(CommonActions.java:39)
	at Utility.Base.getResult(Base.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:731)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.TestNG.privateMain(TestNG.java:1459)
	at org.testng.TestNG.main(TestNG.java:1428)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="endReport()[pri:0, instance:FuntionalTestCases.Sprint_1@66048bfd]" name="endReport" is-config="true" duration-ms="0" started-at="2020-05-17T22:43:54Z" finished-at="2020-05-17T22:43:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- FuntionalTestCases.Sprint_1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
  <suite name="Suite (0)" duration-ms="17921" started-at="2020-05-17T17:13:54Z" finished-at="2020-05-17T17:14:12Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="17921" started-at="2020-05-17T17:13:54Z" finished-at="2020-05-17T17:14:12Z">
      <class name="FuntionalTestCases.Sprint_1">
        <test-method status="PASS" signature="startReport()[pri:0, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="startReport" is-config="true" duration-ms="2" started-at="2020-05-17T22:43:54Z" finished-at="2020-05-17T22:43:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="LaunchBrowser(java.lang.String, java.lang.String)[pri:0, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="LaunchBrowser" is-config="true" duration-ms="13001" started-at="2020-05-17T22:43:54Z" finished-at="2020-05-17T22:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchBrowser -->
        <test-method status="FAIL" signature="TC01()[pri:1, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="TC01" duration-ms="4769" started-at="2020-05-17T22:44:07Z" description="Login" finished-at="2020-05-17T22:44:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertFalse(Assert.java:62)
	at org.testng.Assert.assertFalse(Assert.java:72)
	at FuntionalTestCases.Sprint_1.TC01(Sprint_1.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.TestNG.privateMain(TestNG.java:1459)
	at org.testng.TestNG.main(TestNG.java:1428)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01 -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="CloseBrowser" is-config="true" duration-ms="64" started-at="2020-05-17T22:44:12Z" finished-at="2020-05-17T22:44:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="FAIL" signature="getResult(org.testng.ITestResult)[pri:0, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="getResult" is-config="true" duration-ms="86" started-at="2020-05-17T22:44:12Z" finished-at="2020-05-17T22:44:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC01 status=FAILURE method=Sprint_1.TC01()[pri:1, instance:FuntionalTestCases.Sprint_1@6e3c1e69] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:344)
	at Utility.CommonActions.GetScreenshot(CommonActions.java:39)
	at Utility.Base.getResult(Base.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:731)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.TestNG.privateMain(TestNG.java:1459)
	at org.testng.TestNG.main(TestNG.java:1428)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="endReport()[pri:0, instance:FuntionalTestCases.Sprint_1@6e3c1e69]" name="endReport" is-config="true" duration-ms="0" started-at="2020-05-17T22:44:12Z" finished-at="2020-05-17T22:44:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- FuntionalTestCases.Sprint_1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite (0) -->
</testng-results>
