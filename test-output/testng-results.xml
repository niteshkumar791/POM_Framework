<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="5" total="6" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="21576" started-at="2020-05-18T21:51:54Z" finished-at="2020-05-18T21:52:16Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="21576" started-at="2020-05-18T21:51:54Z" finished-at="2020-05-18T21:52:16Z">
      <class name="FuntionalTestCases.Sprint_1">
        <test-method status="PASS" signature="startReport()[pri:0, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="startReport" is-config="true" duration-ms="171" started-at="2020-05-19T03:21:54Z" finished-at="2020-05-19T03:21:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="LaunchBrowser(java.lang.String, java.lang.String)[pri:0, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="LaunchBrowser" is-config="true" duration-ms="10972" started-at="2020-05-19T03:21:54Z" finished-at="2020-05-19T03:22:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchBrowser -->
        <test-method status="FAIL" signature="TC04()[pri:4, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="TC04" duration-ms="10313" started-at="2020-05-19T03:22:05Z" description="Add Recruitment Vacancy" finished-at="2020-05-19T03:22:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertFalse(Assert.java:62)
	at org.testng.Assert.assertFalse(Assert.java:72)
	at FuntionalTestCases.Sprint_1.TC04(Sprint_1.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04 -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="CloseBrowser" is-config="true" duration-ms="139" started-at="2020-05-19T03:22:16Z" finished-at="2020-05-19T03:22:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="FAIL" signature="getResult(org.testng.ITestResult)[pri:0, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="getResult" is-config="true" duration-ms="126" started-at="2020-05-19T03:22:16Z" finished-at="2020-05-19T03:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC04 status=FAILURE method=Sprint_1.TC04()[pri:4, instance:FuntionalTestCases.Sprint_1@29ee9faa] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unexpected result for screenshot command: com.google.common.collect.Maps$TransformedEntriesMap instance
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:344)
	at Utility.CommonActions.GetScreenshot(CommonActions.java:40)
	at Utility.Base.getResult(Base.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:723)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="endReport()[pri:0, instance:FuntionalTestCases.Sprint_1@29ee9faa]" name="endReport" is-config="true" duration-ms="0" started-at="2020-05-19T03:22:16Z" finished-at="2020-05-19T03:22:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- FuntionalTestCases.Sprint_1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
